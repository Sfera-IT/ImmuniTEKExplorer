<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: immuni.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>SignatureInfo</code>
 */
class SignatureInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Key version for rollovers
     * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
     *
     * Generated from protobuf field <code>string verification_key_version = 3;</code>
     */
    protected $verification_key_version = '';
    /**
     * Alias with which to identify public key to be used for verification
     * Must be in character class [a-zA-Z0-9_.]
     * For cross-compatibility with Apple, you can use your region's three-digit
     * mobile country code (MCC). If your region has more than one MCC, choose the
     * one that Apple has configured.
     *
     * Generated from protobuf field <code>string verification_key_id = 4;</code>
     */
    protected $verification_key_id = '';
    /**
     * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
     *
     * Generated from protobuf field <code>string signature_algorithm = 5;</code>
     */
    protected $signature_algorithm = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $verification_key_version
     *           Key version for rollovers
     *           Must be in character class [a-zA-Z0-9_]. For example, 'v1'
     *     @type string $verification_key_id
     *           Alias with which to identify public key to be used for verification
     *           Must be in character class [a-zA-Z0-9_.]
     *           For cross-compatibility with Apple, you can use your region's three-digit
     *           mobile country code (MCC). If your region has more than one MCC, choose the
     *           one that Apple has configured.
     *     @type string $signature_algorithm
     *           ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Immuni::initOnce();
        parent::__construct($data);
    }

    /**
     * Key version for rollovers
     * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
     *
     * Generated from protobuf field <code>string verification_key_version = 3;</code>
     * @return string
     */
    public function getVerificationKeyVersion()
    {
        return $this->verification_key_version;
    }

    /**
     * Key version for rollovers
     * Must be in character class [a-zA-Z0-9_]. For example, 'v1'
     *
     * Generated from protobuf field <code>string verification_key_version = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setVerificationKeyVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->verification_key_version = $var;

        return $this;
    }

    /**
     * Alias with which to identify public key to be used for verification
     * Must be in character class [a-zA-Z0-9_.]
     * For cross-compatibility with Apple, you can use your region's three-digit
     * mobile country code (MCC). If your region has more than one MCC, choose the
     * one that Apple has configured.
     *
     * Generated from protobuf field <code>string verification_key_id = 4;</code>
     * @return string
     */
    public function getVerificationKeyId()
    {
        return $this->verification_key_id;
    }

    /**
     * Alias with which to identify public key to be used for verification
     * Must be in character class [a-zA-Z0-9_.]
     * For cross-compatibility with Apple, you can use your region's three-digit
     * mobile country code (MCC). If your region has more than one MCC, choose the
     * one that Apple has configured.
     *
     * Generated from protobuf field <code>string verification_key_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setVerificationKeyId($var)
    {
        GPBUtil::checkString($var, True);
        $this->verification_key_id = $var;

        return $this;
    }

    /**
     * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
     *
     * Generated from protobuf field <code>string signature_algorithm = 5;</code>
     * @return string
     */
    public function getSignatureAlgorithm()
    {
        return $this->signature_algorithm;
    }

    /**
     * ASN.1 OID for Algorithm Identifier. For example, `1.2.840.10045.4.3.2'
     *
     * Generated from protobuf field <code>string signature_algorithm = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setSignatureAlgorithm($var)
    {
        GPBUtil::checkString($var, True);
        $this->signature_algorithm = $var;

        return $this;
    }

}

